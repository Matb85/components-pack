function c(e,t,s){let n="",r="";if(Array.isArray(s))for(let o=0;o<s.length;o++){const i=e.replace(t.thumbnail,t[s[o]]);n+=`${i} ${s[o]}w, `}else{const o=Object.keys(s);for(let i=0;i<o.length;i++){const l=o[i],a=e.replace(t.thumbnail,t[l]);n+=`${a} ${o[i]}w, `,i<o.length-1&&(r+=`(max-width: ${s[l]}px) ${l}px, `)}r+="100vw"}return{genSrcset:n,genSizes:r}}function h(e){const t=parseFloat(getComputedStyle(document.documentElement).fontSize)*2,s=window.innerHeight-t,n=window.innerWidth-t;return window.innerWidth/window.innerHeight>e?{w:s*e+"px",h:s+"px"}:{w:n+"px",h:n*(1/e)+"px"}}var d,f=class{el;ref;GlobalConfig;constructor(e,t,s){this.ref=e,this.el=t,this.GlobalConfig=s}mounted({img:e,rect:t}){return new Promise(s=>{this.ref.style.cssText=`top:${t.y}px;left:${t.x}px;width:${e.offsetWidth}px;height:${e.offsetHeight}px;`;const n=()=>{this.el.classList.add("MP-viewer-open"),d=()=>{const{w:r,h:o}=h(e.naturalWidth/e.naturalHeight);this.ref.style.setProperty("--enlarged-photo-w",r),this.ref.style.setProperty("--enlarged-photo-h",o)},d(),window.addEventListener("resize",d),this.ref.srcset=c(e.dataset.minsrc,this.GlobalConfig.formats,this.GlobalConfig.enlarged).genSrcset,s()};this.ref.addEventListener("load",n,{once:!0}),this.ref.srcset=e.dataset.srcset})}close(){return new Promise(e=>{setTimeout(()=>{this.el.classList.remove("MP-viewer-close","MP-viewer-open"),this.ref.removeAttribute("style"),window.removeEventListener("resize",d),e()},400),this.el.classList.add("MP-viewer-close")})}setupImgs(e,t){const s=e.photolist[t.dataset.group?.split("-")[0]||"rest"];let n=0;for(let r=0;r<s.length;r++){const o=s[r];o.srcset=c(o.srcset,this.GlobalConfig.formats,this.GlobalConfig.enlarged).genSrcset,typeof t<"u"&&o.src==t.dataset.minsrc&&(n=r)}return{photos:s,index:n}}};function p(){const e={photo(r){r.addEventListener("load",()=>{r.srcset==""?(r.addEventListener("load",()=>r.classList.add("loaded"),{once:!0}),r.srcset=r.dataset.srcset):r.classList.add("loaded")},{once:!0}),r.srcset=r.dataset.srcset}};async function t(r,o){r.forEach(i=>{if(i.intersectionRatio<=0)return;const l=i.target,a=l.dataset.observerhandler;if(!a||!e[a]){console.error(`No handler for ${a}, available handlers: ${Object.keys(e).join(", ")}, DOM element:`,l);return}e[a](l),o.unobserve(l)})}const s=new IntersectionObserver(t,{rootMargin:"0px",threshold:.05});return{callback:t,observer:s,photolist:{},handlers:e}}var u={addHandler(e,{name:t,handler:s}){e.handlers[t]=s},removeHandler(e,t){delete e.handlers[t]},addPhoto(e,t){const[s,n]=t.group?.split("-")||["rest",void 0];e.photolist[s]||(e.photolist[s]=[]),e.photolist[s].map(r=>r.src).includes(t.src)||(typeof n<"u"?e.photolist[s][n]=t:e.photolist[s].push(t))}};export{p as S,u as a,f as m};
