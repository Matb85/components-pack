---
const svgPath =
  "M.52 24a.5.52 0 01-.35-.9L10.8 12 .17.93a.5.52 0 11.7-.74l10.99 11.46c.19.2.19.54 0 .73L.88 23.84a.5.5 0 01-.36.16z";
---

<section title="Podgląd wielu zdjęć" id="MP-multi-viewer" class="MP-multi-viewer MP-viewer MS-wrapper">
  <div aria-hidden="true" class="first-slide">
    <img id="MP-multi-viewer-viewed-photo" class="viewed-photo" alt="main" />
  </div>
  <div class="photo-slider MS-con" id="photo-slider">
  </div>
  <!-- navigation -->
  <button title="Poprzednie zdjęcie" id="multi-viewer-prev">
    <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="12" height="24" viewBox="0 0 12 24"
    >
      <path d={svgPath}></path>
    </svg>
  </button>
  <button title="Kolejne zdjęcie" id="multi-viewer-next">
    <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="12" height="24" viewBox="0 0 12 24"
    >
      <path d={svgPath}></path>
    </svg>
  </button>
  <div class="MP-viewer_navbar">
    <p id="multi-viewer-counter"></p>
    <button aria-label="Zamknij podgląd" title="Zamknij podgląd" id="close-multi-viewer"
    ></button>
  </div>
</section>

<script>
  import { mixin } from "@matb85/base-pack";
  import { NoLoop, swipeHandler } from "modular-slider";
  import { GlobalConfig } from "virtual:@matb85/astro-pack";

  const ref = document.getElementById("MP-multi-viewer-viewed-photo") as HTMLImageElement;
  const con = document.getElementById("MP-multi-viewer") as HTMLElement;
  const photoSlider = document.getElementById("photo-slider") as HTMLElement;
  const counterEl = document.getElementById("multi-viewer-counter") as HTMLElement;

  const prevBtn = document.getElementById("multi-viewer-prev") as HTMLButtonElement;
  const nextBtn = document.getElementById("multi-viewer-next") as HTMLButtonElement;
  const closeBtn = document.getElementById("close-multi-viewer") as HTMLButtonElement;

  let slider: NoLoop | undefined = undefined;
  let counter = 0;

  window.addEventListener("enlargeManyPhotos", async (e) => {
    const { detail } = e as CustomEvent;
    window.addEventListener("keyup", onKeyUp);

    const result = mixin.setupPhotos(window.cpStore, detail.img, GlobalConfig);

    photoSlider.innerHTML = result.photos.map((img) => `
    <img
        class="other-slide MS-lazy"
        src="${img.src}"
        data-srcset="${img.srcset}"
        alt="${img.alt || "zdjęcie bez podpisu"}"
        data-observerhandler="photo" />
    `).join("");

    await mixin.mounted(detail, con, ref, GlobalConfig);
    slider = new NoLoop({
      container: "photo-slider",
      transitionSpeed: 500,
      plugins: [swipeHandler()],
    });

    const chosen = slider.container.children[result.index];
    window.cpStore.handlers.photo(chosen as HTMLImageElement);

    const els = slider.container.querySelectorAll(".MS-lazy") as NodeListOf<HTMLImageElement>;
    els.forEach(img => window.cpStore.observer.observe(img));

    ref.addEventListener("animationend", () => (ref.parentElement!.style.display = "none"), { once: true });
    counter = slider.counter;
    Object.defineProperty(slider, "counter", {
      get: () => counter,
      set: val => {
        counter = val;
        const curPhoto = result.photos[Math.abs(val)];
        counterEl.innerText = `${Math.abs(val) + 1}/${result.photos.length} ${curPhoto && curPhoto.alt ? " | " + curPhoto.alt : ""}`;
      },
    });

    setTimeout(() => {
      slider?.goTo(result.index)
      const curPhoto = result.photos[Math.abs(result.index)];
      counterEl.innerText = `${Math.abs(result.index) + 1}/${result.photos.length} ${curPhoto && curPhoto.alt ? " | " + curPhoto.alt : ""}`;
    }, 0);
  });

  function onKeyUp(e: KeyboardEvent) {
    if (!slider) return;
    if (e.key === "Escape") closeViewer();
    else if (e.key === "ArrowLeft") slider!.slidePrev();
    else if (e.key === "ArrowRight") slider!.slideNext();
  }

  async function closeViewer() {
    await mixin.close(con, ref);
    ref.parentElement!.style.display = "block";
    slider?.goTo(0);
    slider?.destroy();
    photoSlider.innerHTML = "";
    slider = undefined;
    window.removeEventListener("keyup", onKeyUp);
  }

  nextBtn.addEventListener("click", () => slider?.slideNext());
  prevBtn.addEventListener("click", () => slider?.slidePrev());
  closeBtn.addEventListener("click", closeViewer);
</script>
